/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.lexus.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.lexus.util.*;

/** 
 * MyEclipse Struts
 * Creation date: 06-08-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class ManufactureListAction extends BaseAction {
	/**
	 * Logger for this class
	 */
	private static final Log log = LogFactory.getLog(ManufactureListAction.class);

	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub

		if (log.isInfoEnabled()) {
			log.info("执行ManufactureListAction的方法");
		}
		//获取参数
		int currentPage=request.getParameter(Constans.PARAM_OF_CURRENTPAGE)==null?1:Integer.parseInt(request.getParameter(Constans.PARAM_OF_CURRENTPAGE));
		int categoryId=(request.getParameter(Constans.PARAM_OF_ID)==null || request.getParameter(Constans.PARAM_OF_ID)=="")?-1:Integer.parseInt(request.getParameter(Constans.PARAM_OF_ID));
		Page page=new Page(9,currentPage);
		//获得产品分页列表数据并返回
		PageResult pageResult=this.getProductService().findByPagination(page,categoryId);
		if(log.isInfoEnabled())
		{
			log.info("共有几条记录="+pageResult.getPage().getRecordCount());
			log.info("每页显示几条="+pageResult.getPage().getPageSize());
			log.info("共有几页="+pageResult.getPage().getPageCount());
			log.info("当前在第几页="+pageResult.getPage().getCurrentPage());
		}
		request.setAttribute(Constans.ENTITY_OF_PAGE, pageResult.getPage());
		request.setAttribute(Constans.LIST_OF_PRODUCT, pageResult.getList());
		return mapping.findForward(Constans.PAGE_MANUFACTURE_LIST);
	}
}