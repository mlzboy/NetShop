/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.lexus.struts.action;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.jdom.Document;
import org.jdom.output.XMLOutputter;

import com.lexus.util.XMLOperate;

/** 
 * MyEclipse Struts
 * Creation date: 06-07-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class DictionaryList2Action extends BaseAction {
	/**
	 * Logger for this class
	 */
	private static final Log log = LogFactory.getLog(DictionaryList2Action.class);

	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws IOException 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		//设置输出信息的格式及字符集        
        response.setContentType("text/xml; charset=UTF-8");
        response.setHeader("Cache-Control", "no-cache");
		if (log.isInfoEnabled()) {
			log.info("执行dictionaryList2的execute操作");
		}
//		User user = this.getUserSession(request);
//		if (user == null) {
//			return mapping.findForward(Constans.PAGE_LOGIN);
//		} else { // 返回字典列表
			if (log.isInfoEnabled()) {
				log.info("返回字典列表2");
			}
			List list = this.getDictionaryService().findByAll();
//			request.getSession().setAttribute(Constans.LIST_OF_DICTIONARY, list);
//			request.setAttribute(Constans.LIST_OF_DICTIONARY, list);
			Document doc=XMLOperate.dictionariesXMLDocument2(list);
			XMLOutputter xout=new XMLOutputter();
			xout.output(doc, response.getWriter());
			response.getWriter().close();
			return null;
//			return mapping.findForward(Constans.PAGE_DICTIONARY_LIST);
//		}
	}
}